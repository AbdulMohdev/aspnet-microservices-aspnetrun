name: dockercompose18391388140378158956
services:
  basket.api:
    build:
      context: C:\Users\pc\source\repos\microservice-dot-net\src
      dockerfile: Services/Basket/Basket.API/Dockerfile
    container_name: basket.api
    depends_on:
      basketdb:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "80"
      CacheSettings:ConnectionString: basketdb:6379
    image: basketapi
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: "8001"
      protocol: tcp
  basketdb:
    container_name: basketdb
    image: redis:alpine
    networks:
      default: null
    ports:
    - mode: ingress
      target: 6397
      published: "6397"
      protocol: tcp
    restart: always
  catalog.api:
    build:
      context: C:\Users\pc\source\repos\microservice-dot-net\src
      dockerfile: Service/Catalog/Catalog.API/Dockerfile
    container_name: catalog.api
    depends_on:
      catalogdb:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "80"
      DatabaseSettings:ConnectionString: mongodb://catalogdb:27017
    image: catalogapi
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: "8000"
      protocol: tcp
  catalogdb:
    container_name: catalogsdb
    image: mongo
    networks:
      default: null
    ports:
    - mode: ingress
      target: 27017
      published: "27017"
      protocol: tcp
    restart: always
    volumes:
    - type: volume
      source: mongo_data
      target: /data/db
      volume: {}
  portainer:
    container_name: portainer
    image: portainer/portainer-ce
    networks:
      default: null
    ports:
    - mode: ingress
      target: 8000
      published: "8080"
      protocol: tcp
    - mode: ingress
      target: 9000
      published: "9000"
      protocol: tcp
    restart: always
    volumes:
    - type: bind
      source: /var/run/docker.sock
      target: /var/run/docker.sock
      bind:
        create_host_path: true
    - type: volume
      source: portainer_data
      target: /data
      volume: {}
networks:
  default:
    name: dockercompose18391388140378158956_default
volumes:
  mongo_data:
    name: dockercompose18391388140378158956_mongo_data
  portainer_data:
    name: dockercompose18391388140378158956_portainer_data